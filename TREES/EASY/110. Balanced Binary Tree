/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
        int isbalance(TreeNode *root)
        {
                if(root == NULL)
                {
                        return 0;
                }
                
                int lh = isbalance(root->left);
                if(lh==-1){ return -1;}
                int rh = isbalance(root->right);
                if(rh == -1){ return -1;}
                        
                
                if( abs(lh-rh)>1 )
                {
                        return -1;
                }
                else
                {
                        return max(lh,rh)+1;
                }            
        }
        
        
public:
    bool isBalanced(TreeNode* root) {
        
             if(isbalance(root)!=-1)
             {
                     return true;
             }
             
                     return false;
                    
    }
};
